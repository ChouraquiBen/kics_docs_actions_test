{
  "id": "e576ce44-dd03-4022-a8c0-3906acca2ab4",
  "queryName": "BigQuery Dataset Is Public",
  "severity": "HIGH",
  "category": "Access Control",
  "descriptionText": "BigQuery dataset is anonymously or publicly accessible",
  "descriptionUrl": "https://www.terraform.io/docs/providers/google/r/bigquery_dataset.html",
  "platform": "Terraform",
  "descriptionID": "cb5081a0",
  "cloudProvider": "gcp",
  "cwe": "732",
  "detailedDescriptionText": "## What is the vulnerability?\n\nThis vulnerability occurs when a Google BigQuery dataset is configured to be publicly accessible by granting access to special groups such as 'allAuthenticatedUsers' or 'allUsers'. This effectively makes your dataset and the data it contains accessible to everyone on the internet or anyone with a Google account.\n\n## Why is it risky?\n\n- **Data Exposure**: Public datasets expose potentially sensitive or proprietary data to anyone on the internet.\n- **Regulatory Compliance**: Public access to datasets may violate regulatory requirements like GDPR, HIPAA, PCI-DSS, etc., if they contain regulated data.\n- **Intellectual Property Risk**: Proprietary data or business analytics could be accessed by competitors.\n- **Privacy Concerns**: Customer data could be exposed, leading to privacy violations and loss of trust.\n- **Data Theft**: Malicious actors could extract large volumes of data for unauthorized purposes.\n\n## Example of vulnerable configuration\n```terraform\nresource \"google_bigquery_dataset\" \"vulnerable_example\" {\n  dataset_id                  = \"example_dataset\"\n  friendly_name               = \"test\"\n  description                 = \"This is a test description\"\n  location                    = \"EU\"\n  default_table_expiration_ms = 3600000\n\n  labels = {\n    env = \"default\"\n  }\n\n  access {\n    role          = \"OWNER\"\n    special_group = \"allAuthenticatedUsers\" # ❌ Grants access to anyone with a Google account\n  }\n}\n```\n\n## Example of secure configuration\n```terraform\nresource \"google_bigquery_dataset\" \"secure_example\" {\n  dataset_id                  = \"example_dataset\"\n  friendly_name               = \"test\"\n  description                 = \"This is a test description\"\n  location                    = \"EU\"\n  default_table_expiration_ms = 3600000\n\n  labels = {\n    env = \"default\"\n  }\n\n  access {\n    role          = \"OWNER\"\n    user_by_email = google_service_account.bqowner.email # ✅ Specific service account\n  }\n\n  access {\n    role   = \"READER\"\n    domain = \"yourcompany.com\" # ✅ Limited to specific domain\n  }\n}\n```\n\n## Mitigation strategies\n\n1. **Remove Public Access**: Remove any access grants to 'allUsers' or 'allAuthenticatedUsers'.\n2. **Use Specific Identities**: Grant access only to specific users, service accounts, or groups that need it.\n3. **Implement Domain Restrictions**: If broader access is needed, restrict to specific domains rather than all authenticated users.\n4. **Apply Least Privilege**: Grant the minimum necessary permissions (e.g., READER instead of OWNER when possible).\n5. **Use VPC Service Controls**: Consider implementing VPC Service Controls to restrict access to your BigQuery datasets.\n6. **Enable Audit Logging**: Set up audit logging to monitor access to your datasets.\n7. **Implement Row-Level Security**: For datasets that need some public access, consider using row-level security to restrict access to specific data."
}