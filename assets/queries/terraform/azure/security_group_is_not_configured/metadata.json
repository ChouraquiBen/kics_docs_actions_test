{
  "id": "5c822443-e1ea-46b8-84eb-758ec602e844",
  "queryName": "Security Group is Not Configured",
  "severity": "HIGH",
  "category": "Insecure Configurations",
  "descriptionText": "Azure Virtual Network subnet must be configured with a Network Security Group, which means the attribute 'security_group' must be defined and not empty",
  "descriptionUrl": "https://www.terraform.io/docs/providers/azure/r/virtual_network.html",
  "platform": "Terraform",
  "descriptionID": "e64d2982",
  "cloudProvider": "azure",
  "cwe": "285",
  "oldSeverity": "MEDIUM",
  "detailedDescriptionText": "Failing to configure a Network Security Group (NSG) for an Azure Virtual Network subnet creates a significant security vulnerability. Without an NSG, the subnet lacks access controls and traffic filtering, leaving all resources within it potentially accessible from both the internet and other network segments. This omission effectively creates an unprotected network segment that violates basic network security principles and dramatically increases your attack surface.\n\nVulnerable example:\n```terraform\n# Subnet without a Network Security Group configured\nresource \"azurerm_virtual_network\" \"vulnerable\" {\n  name                = \"example-vnet\"\n  address_space       = [\"10.0.0.0/16\"]\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n\n  subnet {\n    name           = \"subnet1\"\n    address_prefix = \"10.0.1.0/24\"\n    # No security_group defined - all traffic allowed by default\n  }\n}\n```\n\nSecure example:\n```terraform\n# Create a Network Security Group\nresource \"azurerm_network_security_group\" \"secure\" {\n  name                = \"example-nsg\"\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n\n  security_rule {\n    name                       = \"AllowHTTPSInbound\"\n    priority                   = 100\n    direction                  = \"Inbound\"\n    access                     = \"Allow\"\n    protocol                   = \"Tcp\"\n    source_port_range          = \"*\"\n    destination_port_range     = \"443\"\n    source_address_prefix      = \"*\"\n    destination_address_prefix = \"*\"\n  }\n}\n\n# Subnet with a Network Security Group properly configured\nresource \"azurerm_virtual_network\" \"secure\" {\n  name                = \"example-vnet\"\n  address_space       = [\"10.0.0.0/16\"]\n  location            = azurerm_resource_group.example.location\n  resource_group_name = azurerm_resource_group.example.name\n\n  subnet {\n    name           = \"subnet1\"\n    address_prefix = \"10.0.1.0/24\"\n    security_group = azurerm_network_security_group.secure.id  # Properly configured\n  }\n}\n```\n\nMitigation strategies:\n1. Always associate a Network Security Group with every subnet in your Azure Virtual Network\n2. Implement a default deny rule and explicitly allow only necessary traffic\n3. Apply the principle of least privilege to all NSG rules\n4. Segment your network with multiple subnets, each with appropriate NSGs\n5. Use Application Security Groups for more granular control within subnets\n6. Implement Azure DDoS protection for additional safeguards\n7. Regularly audit your NSG configurations\n8. Consider using Azure Firewall for advanced filtering capabilities\n9. Enable NSG flow logs for traffic analysis and monitoring\n10. Use Azure Policy to enforce NSG association with all subnets"
}