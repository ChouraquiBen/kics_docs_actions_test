{
  "id": "c7f8e9a1-b2c3-d4e5-f6a7-8901b2c3d4e5",
  "queryName": "Ensure that PostgreSQL server disables public network access",
  "severity": "HIGH",
  "category": "Networking and Firewall",
  "descriptionText": "PostgreSQL Database Server should disable public network access by setting public_network_access_enabled to false. This prevents unauthorized access to the database from the public internet.",
  "descriptionUrl": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server",
  "platform": "Terraform",
  "descriptionID": "c7f8e9a1",
  "cloudProvider": "azure",
  "cwe": "311",
  "detailedDescriptionText": "Enabling public network access for Azure PostgreSQL servers creates a significant security vulnerability by exposing your database directly to the internet. PostgreSQL servers often contain sensitive application data, user information, and business logic. When public network access is enabled (either explicitly by setting public_network_access_enabled to true or implicitly by omitting this setting), the database becomes potentially accessible to unauthorized users, increasing the risk of data breaches, credential theft, and other security threats.\n\nVulnerable examples:\n```terraform\n# PostgreSQL server with public network access explicitly enabled\nresource \"azurerm_postgresql_server\" \"vulnerable1\" {\n  name                = \"bad-postgresql-server\"\n  location            = \"East US\"\n  resource_group_name = \"example-rg\"\n\n  public_network_access_enabled = [true]  # Vulnerability: Explicitly enables public access\n\n  version                 = \"9.6\"\n  ssl_enforcement_enabled = true\n  sku_name                = \"B_Gen5_1\"\n}\n\n# PostgreSQL server with public network access implicitly enabled (by default)\nresource \"azurerm_postgresql_server\" \"vulnerable2\" {\n  name                = \"bad-postgresql-server-missing\"\n  location            = \"East US\"\n  resource_group_name = \"example-rg\"\n  # public_network_access_enabled is not defined â†’ Vulnerability: Defaults to true\n\n  version                 = \"9.6\"\n  ssl_enforcement_enabled = true\n  sku_name                = \"B_Gen5_1\"\n}\n```\n\nSecure example:\n```terraform\n# PostgreSQL server with public network access properly disabled\nresource \"azurerm_postgresql_server\" \"secure\" {\n  name                = \"good-postgresql-server\"\n  location            = \"East US\"\n  resource_group_name = \"example-rg\"\n\n  public_network_access_enabled = [false]  # Secure: Explicitly disables public access\n\n  version                 = \"9.6\"\n  ssl_enforcement_enabled = true\n  sku_name                = \"B_Gen5_1\"\n}\n```\n\nMitigation strategies:\n1. Always explicitly set public_network_access_enabled to false for all PostgreSQL servers\n2. Use Azure Private Link to establish private connectivity to your PostgreSQL server\n3. Implement Virtual Network Service Endpoints to restrict database access to specific Azure VNets\n4. Configure firewall rules to limit access to only necessary IP addresses if public access must be enabled\n5. Enable Advanced Threat Protection for PostgreSQL to detect suspicious activities\n6. Enforce SSL connections by setting ssl_enforcement_enabled to true (as an additional layer of security)\n7. Use Azure Active Directory authentication for PostgreSQL instead of traditional username/password authentication\n8. Regularly audit PostgreSQL server configurations for security best practices\n9. Implement a security policy that requires all database servers to disable public network access\n10. Consider using Azure Bastion for secure administrative access to your virtual network resources"
}
