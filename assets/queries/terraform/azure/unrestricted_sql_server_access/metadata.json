{
  "id": "d7ba74da-2da0-4d4b-83c8-2fd72a3f6c28",
  "queryName": "Unrestricted SQL Server Access",
  "severity": "CRITICAL",
  "category": "Networking and Firewall",
  "descriptionText": "Azure SQL Server Accessibility should be set to a minimal address range to grant the principle of least privileges, which means the difference between the values of the 'end_ip_address' and 'start_ip_address' must be less than 256. Additionally, both ips must be different from '0.0.0.0'.",
  "descriptionUrl": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule",
  "platform": "Terraform",
  "descriptionID": "837de8dd",
  "cloudProvider": "azure",
  "cwe": "284",
  "oldSeverity": "MEDIUM",
  "detailedDescriptionText": "Unrestricted SQL Server access constitutes a critical security vulnerability where Azure SQL Server firewall rules allow connections from overly broad IP ranges or use the '0.0.0.0' address to permit access from any source. This configuration violates the principle of least privilege and creates significant security risks by exposing your database to potential unauthorized access, data breaches, and SQL injection attacks.\n\nVulnerable examples:\n```terraform\n# Allowing access from 0.0.0.0 (any IP address)\nresource \"azurerm_sql_firewall_rule\" \"vulnerable1\" {\n  name                = \"FirewallRule1\"\n  resource_group_name = azurerm_resource_group.example.name\n  server_name         = azurerm_sql_server.example.name\n  start_ip_address    = \"0.0.0.0\"          # Vulnerability: Open to any source IP\n  end_ip_address      = \"10.0.27.62\"\n}\n\n# Allowing access from 0.0.0.0 to 255.255.255.255 (entire internet)\nresource \"azurerm_sql_firewall_rule\" \"vulnerable2\" {\n  name                = \"FirewallRule1\"\n  resource_group_name = azurerm_resource_group.example.name\n  server_name         = azurerm_sql_server.example.name\n  start_ip_address    = \"0.0.0.0\"          # Vulnerability: Start of entire IP range\n  end_ip_address      = \"255.255.255.255\"  # Vulnerability: End of entire IP range\n}\n```\n\nSecure examples:\n```terraform\n# Restricting access to a single IP address\nresource \"azurerm_sql_firewall_rule\" \"secure\" {\n  name                = \"FirewallRule1\"\n  resource_group_name = azurerm_resource_group.example.name\n  server_name         = azurerm_sql_server.example.name\n  start_ip_address    = \"10.0.17.62\"    # Specific IP address\n  end_ip_address      = \"10.0.17.62\"    # Same IP address for single host access\n}\n```\n\nMitigation strategies:\n1. Limit SQL Server access to specific IP addresses or small CIDR ranges (ideally /29 or smaller)\n2. Never use '0.0.0.0' as an IP address in firewall rules\n3. Implement Azure Private Link for SQL Server to avoid public network exposure\n4. Use Azure Active Directory authentication in addition to firewall rules\n5. Enable Advanced Threat Protection to monitor for suspicious database activities\n6. Regularly audit and review SQL firewall rules to ensure compliance with least privilege principles\n7. Consider using Azure Virtual Network service endpoints to restrict SQL Server access to specific VNets"
}