{
  "id": "25c0ea09-f1c5-4380-b055-3b83863f2bb8",
  "queryName": "SQLServer Ingress From Any IP",
  "severity": "CRITICAL",
  "category": "Networking and Firewall",
  "descriptionText": "Check if all IPs are allowed, check from start 0.0.0.0 to end 255.255.255.255.",
  "descriptionUrl": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule",
  "platform": "Terraform",
  "descriptionID": "eb6d3eca",
  "cloudProvider": "azure",
  "cwe": "668",
  "oldSeverity": "HIGH",
  "detailedDescriptionText": "Exposing Azure SQL Server to all IP addresses represents a critical security vulnerability that creates an extremely high risk of unauthorized access and data breaches. When SQL firewall rules allow traffic from the entire internet (0.0.0.0 to 255.255.255.255), attackers can directly target your database with brute force attacks, SQL injection, and other exploitation techniques.\n\nVulnerable example:\n```terraform\n# Explicitly allowing access from all IP addresses\nresource \"azurerm_sql_firewall_rule\" \"vulnerable\" {\n  name                = \"FirewallRule1\"\n  resource_group_name = azurerm_resource_group.example.name\n  server_name         = azurerm_sql_server.example.name\n  start_ip_address    = \"0.0.0.0\"          # Vulnerability: Start of entire IP range\n  end_ip_address      = \"255.255.255.255\"  # Vulnerability: End of entire IP range\n}\n```\n\nSecure example:\n```terraform\n# Restricting access to a specific IP address\nresource \"azurerm_sql_firewall_rule\" \"secure\" {\n  name                = \"FirewallRule1\"\n  resource_group_name = azurerm_resource_group.example.name\n  server_name         = azurerm_sql_server.example.name\n  start_ip_address    = \"10.0.17.62\"    # Secure: Specific IP address\n  end_ip_address      = \"10.0.17.62\"    # Secure: Same IP for single host access\n}\n```\n\nMitigation strategies:\n1. Never allow unrestricted access from the entire internet to SQL Server\n2. Restrict access to specific, trusted IP addresses only\n3. Use Azure Private Link to establish private connectivity to your SQL Server\n4. Implement Azure SQL Database Advanced Threat Protection\n5. Enable Azure AD authentication for SQL Server access\n6. Use a VPN or ExpressRoute for secure connectivity\n7. Implement SQL Server auditing and monitoring\n8. Regularly review firewall rules and remove unnecessary access\n9. Consider using Azure Virtual Network service endpoints\n10. Apply the principle of least privilege to all database access controls"
}