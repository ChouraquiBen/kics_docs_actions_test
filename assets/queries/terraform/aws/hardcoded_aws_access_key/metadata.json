{
  "id": "d7b9d850-3e06-4a75-852f-c46c2e92240b",
  "queryName": "Hardcoded AWS Access Key",
  "severity": "HIGH",
  "category": "Secret Management",
  "descriptionText": "AWS Access Key should not be hardcoded",
  "descriptionUrl": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance",
  "platform": "Terraform",
  "descriptionID": "9e8cbdfb",
  "cloudProvider": "aws",
  "cwe": "798",
  "oldSeverity": "MEDIUM",
  "detailedDescriptionText": "AWS access keys and credentials should never be hardcoded in Terraform configurations or any other code. This vulnerability occurs when access keys, secret keys, or other AWS credentials are directly embedded in resource configurations, user data scripts, or other attributes, creating a significant security risk.\n\nHardcoded AWS credentials pose several serious security threats. First, these credentials are often committed to version control systems, potentially exposing them to unauthorized users or even making them publicly accessible in the case of public repositories. Second, hardcoded credentials are difficult to rotate regularly, leading to long-lived access keys that increase the risk window if compromised. Third, these credentials typically have broader permissions than necessary, violating the principle of least privilege.\n\nTo properly secure your AWS resources, never hardcode credentials in any part of your Terraform configuration. Instead, use the AWS provider's supported authentication methods such as environment variables, shared credentials files, or IAM roles. For EC2 instances and other AWS resources, use IAM roles to grant the necessary permissions rather than embedding credentials in user data scripts or configurations.\n\nFor legitimate cases where secrets need to be passed to instances or services, use AWS Secrets Manager, AWS Systems Manager Parameter Store, or a similar secrets management solution. These services provide secure ways to store, retrieve, and rotate sensitive information while implementing proper access controls and audit logging. Additionally, implementing infrastructure security scanning tools like KICS as part of your CI/CD pipeline can help detect hardcoded credentials before they reach production environments."
}
