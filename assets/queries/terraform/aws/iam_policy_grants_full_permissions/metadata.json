{
  "id": "575a2155-6af1-4026-b1af-d5bc8fe2a904",
  "queryName": "IAM Policy Grants Full Permissions",
  "severity": "HIGH",
  "category": "Access Control",
  "descriptionText": "IAM policy should not grant full permissions to resources from the get-go, instead of granting permissions gradually as necessary.",
  "descriptionUrl": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy",
  "platform": "Terraform",
  "descriptionID": "f20cf2cf",
  "cloudProvider": "aws",
  "cwe": "732",
  "detailedDescriptionText": "AWS IAM policies should never grant full/wildcard ('*') permissions to all actions and resources. This vulnerability occurs when an IAM policy statement contains 'Action: \"*\"' combined with 'Resource: \"*\"', effectively granting unrestricted access to all AWS services and resources.\n\nOverly permissive IAM policies violate the principle of least privilege and create a significant security risk. If credentials associated with such a policy are compromised, an attacker would have complete access to the AWS account, including the ability to create, modify, or delete resources, access sensitive data, and potentially perform privilege escalation attacks. This type of unrestricted access can lead to severe security breaches, data loss, and substantial financial impact.\n\nTo properly secure your AWS environment, always implement the principle of least privilege by granting only the specific permissions required for a role or user to perform its intended functions. Instead of using wildcards, explicitly list only the required actions and limit the scope to specific resources by providing their exact ARNs. Additionally, consider using permission boundaries to set the maximum permissions that an IAM entity can have, regardless of what policies are attached to it.\n\nRegularly review and audit your IAM policies using tools like AWS IAM Access Analyzer to identify and remediate overly permissive permissions. Implement a process for periodically reviewing and refining permissions based on actual usage patterns to ensure that access remains appropriate over time. Following these practices helps maintain a secure AWS environment and reduces the risk of unauthorized access or accidental misuse of permissions."
}
