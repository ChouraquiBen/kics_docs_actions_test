{
  "id": "08bd0760-8752-44e1-9779-7bb369b2b4e4",
  "queryName": "DB Instance Storage Not Encrypted",
  "severity": "HIGH",
  "category": "Encryption",
  "descriptionText": "AWS DB Instance should have its storage encrypted by setting the parameter to 'true'. The storage_encrypted default value is 'false'.",
  "descriptionUrl": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted",
  "platform": "Terraform",
  "descriptionID": "88ca11bc",
  "cloudProvider": "aws",
  "cwe": "311",
  "detailedDescriptionText": "AWS RDS database instances should always have storage encryption enabled to protect sensitive data. By default, the 'storage_encrypted' parameter is set to 'false', leaving database storage unencrypted and vulnerable to unauthorized access if the underlying storage is compromised.\n\nUnencrypted database storage represents a significant security risk, particularly for databases containing sensitive information such as personal identifiable information (PII), financial records, authentication credentials, or proprietary business data. Without encryption, this data could be exposed if backup files are accessed inappropriately, when hardware is decommissioned, or through direct access to the storage media.\n\nTo properly secure your RDS instance, explicitly set the 'storage_encrypted' parameter to 'true' in your Terraform configuration. Additionally, for enhanced security, you can specify a custom KMS key using the 'kms_key_id' parameter instead of relying on the default AWS managed keys. This approach gives you more control over your encryption keys, including rotation policies and access management.\n\nEncryption at rest for RDS instances is not only a security best practice but also essential for meeting compliance requirements such as GDPR, HIPAA, PCI DSS, and other regulatory standards that mandate the protection of sensitive data. It provides an additional layer of defense with minimal performance impact and helps protect your organization from data breaches and regulatory violations."
}
