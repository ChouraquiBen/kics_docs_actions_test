name: Run Python Script and Create PR

on:
  push:
    branches:
      - main
    paths:
      - assets/queries/**

jobs:
  run-script-and-pr:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: auto/gen-${{ github.run_id }} 


    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: pwd
        run: |
          ls
          ls documentation

      - name: Checkout to new branch
        run: git checkout -b ${{ env.BRANCH_NAME }}

      - name: Run Python script
        run: python documentation/local_gen.py assets/queries/ --resources-json "documentation/resources.json"

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}
      
      - name: Push branch
        run: git push origin ${{ env.BRANCH_NAME }}

      - name: Create pull request and get URL
        id: create_pr
        run: |
          PR_URL=$(gh pr create -B main -H "${{ env.BRANCH_NAME }}" --title 'Update docs' --body 'Created by Github action')
          echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Use PR URL
        run: echo "The created PR is at ${{ steps.create_pr.outputs.pr_url }}"


      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Auto-generate files"
          title: "Auto-generated files"
          body: "This PR was created automatically by a GitHub Action."
          base: main
          branch: ${{ env.BRANCH_NAME }}
          sign-commits: true

      - name: Send GitHub Action data to a Slack workflow
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
          payload: PR_url=${{ steps.create_pr.outputs.pr_url }}
